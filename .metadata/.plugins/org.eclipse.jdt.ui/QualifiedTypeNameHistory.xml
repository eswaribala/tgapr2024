<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="lombok.extern.slf4j.Slf4j"/>
    <fullyQualifiedTypeName name="org.springframework.cache.annotation.EnableCaching"/>
    <fullyQualifiedTypeName name="jakarta.persistence.Cacheable"/>
    <fullyQualifiedTypeName name="org.springframework.cache.annotation.Cacheable"/>
    <fullyQualifiedTypeName name="org.springframework.cache.annotation.CacheEvict"/>
    <fullyQualifiedTypeName name="org.springframework.cache.annotation.CachePut"/>
    <fullyQualifiedTypeName name="java.io.Serializable"/>
    <fullyQualifiedTypeName name="org.springframework.format.annotation.DateTimeFormat"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
    <fullyQualifiedTypeName name="org.springframework.web.client.RestTemplate"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Value"/>
    <fullyQualifiedTypeName name="org.springframework.http.ResponseEntity"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpMethod"/>
    <fullyQualifiedTypeName name="org.springframework.boot.json.JsonParserFactory"/>
    <fullyQualifiedTypeName name="com.fasterxml.jackson.core.JsonParser"/>
    <fullyQualifiedTypeName name="org.hibernate.mapping.Map"/>
    <fullyQualifiedTypeName name="java.util.Map"/>
    <fullyQualifiedTypeName name="org.springframework.http.MediaType"/>
    <fullyQualifiedTypeName name="org.hibernate.id.IdentifierGenerator"/>
    <fullyQualifiedTypeName name="java.util.Random"/>
    <fullyQualifiedTypeName name="java.time.LocalDate"/>
    <fullyQualifiedTypeName name="org.hibernate.annotations.GenericGenerator"/>
    <fullyQualifiedTypeName name="io.swagger.v3.oas.annotations.media.Schema"/>
    <fullyQualifiedTypeName name="org.springframework.data.jpa.repository.JpaRepository"/>
    <fullyQualifiedTypeName name="org.springframework.security.access.prepost.PreAuthorize"/>
    <fullyQualifiedTypeName name="com.tg.patientregistrationapi.filters.JwtAuthenticationFilter"/>
    <fullyQualifiedTypeName name="com.tg.patientregistrationapi.services.UserService"/>
    <fullyQualifiedTypeName name="com.tg.patientregistrationapi.dtos.JwtResponse"/>
    <fullyQualifiedTypeName name="com.tg.patientregistrationapi.exceptions.DisabledUserException"/>
    <fullyQualifiedTypeName name="com.tg.patientregistrationapi.exceptions.InvalidUserCredentialsException"/>
    <fullyQualifiedTypeName name="com.tg.patientregistrationapi.dtos.JwtRequest"/>
    <fullyQualifiedTypeName name="jakarta.persistence.CascadeType"/>
    <fullyQualifiedTypeName name="jakarta.persistence.FetchType"/>
    <fullyQualifiedTypeName name="jakarta.persistence.JoinTable"/>
    <fullyQualifiedTypeName name="com.boa.jwtsecurity.models.Role"/>
    <fullyQualifiedTypeName name="jakarta.persistence.Entity"/>
    <fullyQualifiedTypeName name="jakarta.persistence.Table"/>
    <fullyQualifiedTypeName name="jakarta.persistence.Id"/>
    <fullyQualifiedTypeName name="jakarta.persistence.GeneratedValue"/>
    <fullyQualifiedTypeName name="jakarta.persistence.GenerationType"/>
    <fullyQualifiedTypeName name="jakarta.persistence.Column"/>
    <fullyQualifiedTypeName name="jakarta.persistence.ManyToMany"/>
    <fullyQualifiedTypeName name="com.tg.patientregistrationapi.repositories.UserRepository"/>
    <fullyQualifiedTypeName name="io.lettuce.core.models.role.RedisInstance.Role"/>
    <fullyQualifiedTypeName name="com.tg.patientregistrationapi.models.Role"/>
    <fullyQualifiedTypeName name="com.boa.jwtsecurity.exceptions.JwtTokenMalformedException"/>
    <fullyQualifiedTypeName name="com.tg.patientregistrationapi.configurations.JwtUtil"/>
    <fullyQualifiedTypeName name="com.tg.patientregistrationapi.services.UserAuthService"/>
    <fullyQualifiedTypeName name="jakarta.servlet.http.HttpServletRequest"/>
    <fullyQualifiedTypeName name="jakarta.servlet.http.HttpServletResponse"/>
    <fullyQualifiedTypeName name="jakarta.servlet.ServletException"/>
    <fullyQualifiedTypeName name="com.tg.patientregistrationapi.models.User"/>
    <fullyQualifiedTypeName name="jakarta.servlet.FilterChain"/>
    <fullyQualifiedTypeName name="com.tg.patientregistrationapi.exceptions.JwtTokenMalformedException"/>
    <fullyQualifiedTypeName name="com.tg.patientregistrationapi.exceptions.JwtTokenMissingException"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.method.configuration.EnableMethodSecurity"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UserDetailsService"/>
    <fullyQualifiedTypeName name="org.springframework.security.authentication.AuthenticationProvider"/>
    <fullyQualifiedTypeName name="org.springframework.security.authentication.dao.DaoAuthenticationProvider"/>
    <fullyQualifiedTypeName name="ch.qos.logback.core.spi.ErrorCodes"/>
</qualifiedTypeNameHistroy>
